#!/bin/bash

#function for installing package
function install_pkg() {
#announcing local variable which means name of package and takes the first argument which is transmitted to function
        local PKG=$1
#checks local copy of the package selection states
        if dpkg --get-selections|grep $PKG >/dev/null 2>/dev/null; then 
#if it already exist than outputs massage that package already exists
                echo "This package $PKG already exists"
#if result of construction its not a true in other words package its not exist than output massage that at now Installing package
#and substitute in this the value of variable $PKG which means the name of installing package
        else
                echo "Installing package: $PKG"
                sudo apt-get --assume-yes install $PKG
        fi
}

#function call
#install_pkg "pdksh"

#function for creating directory
function make_dir() {
#announcing local variable which means name of directory, construction "${1?Directory name required}" means that this variable takes
#the first argument which is transmitted to function and if its not exist than output massage that "Directory name required"
        local DIR=${1?Directory name required}
#test - check file types and compare values in tihs case it means that it cheking for existing of this directory
#and if directory exists than outputs massage "This directory already exists"
        if test -d $DIR; then
                echo "This directory already exists";
#if result of construction its not a true in other words directory its not exist than output massage that "Directory $DIR created successfully"
#and substitute in this the value of variable $DIR which means the name of this directory and of course create this directory with mkdir
        else 
                echo "Directory $DIR created successfully";
                mkdir $DIR;
        fi
}

#function call
#make_dir "/home/svn/myproject"

#function for creating (adding) group
function group_add() {
#announcing local variable which means name of group, construction "${1?Group name required}" means that this variable takes
#the first argument which is transmitted to function and if its not exist than output massage that "Group name required"
        local GRP=${1?Group name required}
# using getent which is Unix command that helps to query one of the following administrative databases in Unix: passwd, group etc (int our case its group)
#and if its return true and group already exists than outputs massage that "This group is already exist"
        if getent group $GRP >/dev/null; then
                echo "This group is already exist"
        else
#if result of construction its not a true in other words group its not exist than output massage that "Group $GRP created successfully"
#and substitute in this the value of variable $GROUP which means the name of this directory and of course add this group with groupadd
                echo "Group $GRP created successfully"
                groupadd $GRP
        fi
}

#function call
#group_add "test"

#function for adding user
function user_add() {
#announcing local variable which means name of user, construction "${1?Username required}" means that this variable takes
#the first argument which is transmitted to function and if its not exist than output massage that "Username required"
        local PASS=${1?Username required}
# using getent which is Unix command that helps to query one of the following administrative databases in Unix: passwd, group etc (int our case its passwd)
#and if its return true and user already exists than outputs massage that "This user is already exist"
        if getent passwd $PASS; then
                echo "This user already exist"
        else
#if result of construction its not a true in other words group its not exist than output massage that "User $1 created successfully"
#and substitute in this the value $1 which means the name of this user (the first argument) and of course add this user with useradd
                echo "User $1 created successfully"
                useradd $1
        fi
}

#function call
#user_add