#!/bin/bash -e

#use curl to get ruby version 1.9.3 from server
	\curl -sSL https://get.rvm.io  | bash -s stable --ruby=1.9.3

#To start using RVM you need to run
	source /usr/local/rvm/scripts/rvm

#Using RVM Ruby version 1.9.3
	rvm install 1.9.3

#make this version as default
	rvm use --default 1.9.3

#install chef version 10.30.2
	gem install chef --version 10.30.2 --no-ri --no-rdoc

#install rabbitmq-server
	apt-get install rabbitmq-server

#configure rabbitmq
	rabbitmqctl add_vhost /chef
	rabbitmqctl add_user chef testing
	sudo rabbitmqctl set_permissions -p /chef chef ".*" ".*" ".*"

#install openjdk
	apt-get install openjdk-6-jre-headless

#install zlib libxml
	apt-get install zlib libxml

#Add the Opscode APT Repository
	echo "deb http://apt.opscode.com/ `lsb_release -cs`-0.10 main"

#Add the GPG Key
	mkdir -p /etc/apt/trusted.gpg.d
	gpg --keyserver keys.gnupg.net --recv-keys 83EF826A
	gpg --export packages@opscode.com

	gpg --export packages@opscode.com | sudo tee /etc/apt/trusted.gpg.d/opscode-keyring.gpg > /dev/null

#apt-get update to update package lists
	apt-get update

#install opscode-keyring which saves keys for last date
	apt-get install opscode-keyring

	apt-get upgrade

	apt-get install libgecode-dev

#getting gecode 
	cd /tmp
	curl -O http://www.gecode.org/download/gecode-3.5.0.tar.gz

#unpacking archive
	tar zxvf gecode-3.5.0.tar.gz

	cd gecode-3.5.0 && ./configure

	make && make install

#install chef-server gem
	gem install chef-server chef-server-api chef-server chef-solr

#install webui
gem install chef-server-webui --no-ri --no-rdoc

#Creating directories which required for chef-server configuration file
mkdir -p /var/chef/ca /var/chef/cache /var/chef/nodes /var/chef/openid/store /var/chef/openid/cstore /var/chef/search_index /var/chef/roles /var/chef/support /var/log/chef/

OUTFILE=/tmp/server.rb

#writing chef-server configuration file
cat << EOH > $OUTFILE
log_level          :info
log_location       STDOUT
ssl_verify_mode    :verify_none
chef_server_url    "http://$IPADRR:4000"
 
signing_ca_path    "/var/chef/ca"
couchdb_database   'chef'
 
cookbook_path      [ "/var/chef/cookbooks" ]
 
file_cache_path    "/var/chef/cache"
node_path          "/var/chef/nodes"
openid_store_path  "/var/chef/openid/store"
openid_cstore_path "/var/chef/openid/cstore"
search_index_path  "/var/chef/search_index"
role_path          "/var/chef/roles"
 
validation_client_name "chef-validator"
validation_key         "/etc/chef/validation.pem"
client_key             "/etc/chef/client.pem"
web_ui_client_name     "chef-webui"
web_ui_key             "/etc/chef/webui.pem"
 
web_ui_admin_user_name "admin"

 
supportdir = "/var/chef/support"

solr_jetty_path File.join(supportdir, "solr", "jetty")
solr_data_path  File.join(supportdir, "solr", "data")
solr_home_path  File.join(supportdir, "solr", "home")
solr_heap_size  "256M"
 
umask 0022
 
Mixlib::Log::Formatter.show_time = false
EOH

nohup chef-server-webui -p 4040 2>&1 > /var/log/chef/chef-server-webui.log &
echo  $! > "/var/chef/webui.pid"

nohup chef-solr 2>&1 > /var/log/chef/chef-solr.log &
echo  $! > "/var/chef/chef-solr.pid"

nohup chef-expander -n1 2>./err_log.txt 1>&2 &
echo  $! > "/var/chef/chef-expander.pid"

nohup chef-server --no-daemonize 2>&1 > /var/log/chef/chef-server.log &
echo  $! > "/var/chef/chef-server.pid"